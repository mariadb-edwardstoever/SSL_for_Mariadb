#!/usr/bin/env bash
# Script by Edward Stoever for Mariadb Support
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
cd $SCRIPT_DIR


if [ ! -f ../vars.sh ]; then
  echo "../vars.sh does not exist. Exiting."; exit 1
fi

if [ ! -f ../functions.sh ]; then
  echo "../functions.sh does not exist. Exiting."; exit 1
fi

source ${SCRIPT_DIR}/../vars.sh
source ${SCRIPT_DIR}/../functions.sh
get_linux_type
OPTIONS_FILE='/etc/mysql/mariadb.conf.d/50-client.cnf' # DEFAULT (DEBIAN)
if [ "$LINUX_TYPE" == "REDHAT" ]; then OPTIONS_FILE='/etc/my.cnf.d/client.cnf'; fi

KEYFILE=$(ls $PUBLISH_DIR/$MY_ORGANIZATION.key)
ALLPURPOSEPEM=$(ls $PUBLISH_DIR/$MY_ORGANIZATION.pem)
CLIENTPEM=$(ls $PUBLISH_DIR/client_$MY_ORGANIZATION.pem)
SERVERPEM=$(ls $PUBLISH_DIR/server_$MY_ORGANIZATION.pem)

if [ ! $CLIENTPEM ] && [ ! $ALLPURPOSEPEM ]; then echo "NO AVAILABLE PEM!"; exit 1; fi

if [ ! $CLIENTPEM ] && [ $ALLPURPOSEPEM ]; then
  DEMOPEM=$ALLPURPOSEPEM
else
  DEMOPEM=$CLIENTPEM
fi

OUTPUT="Note that for 11.4 and higher it is not necessary for you to configure
certificates. Certificates are auto-generated by the software.

Here is an example of adding TLS to an existing slave from the bash command line.

SQL=\"STOP SLAVE; 
   CHANGE MASTER TO
   MASTER_HOST     = 'db1.edw.ee',
   MASTER_SSL_CERT = '${DEMOPEM}',
   MASTER_SSL_KEY  = '${KEYFILE}',
   MASTER_SSL_CA   = '${PUBLISH_DIR}/myCA.pem', 
   MASTER_SSL = 1,
   MASTER_SSL_VERIFY_SERVER_CERT = 1;
   START SLAVE;\"
mariadb -Ae \"\$SQL\"

"

printf "${OUTPUT}"
